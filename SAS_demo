data demo;
set sashelp.demographics;
run;

proc contents data=demo;
run;

/*To see entire datasets*/

proc print data=demo;
run;

proc print data=demo;
var pop;
run;

/*to see multiple variable*/

proc print data=demo;
var pop popAgr;
run;

proc means data=demo;
var pop;
run;
/*to know the descriptive statistic of the data*/

proc means data=demo;
run;
/*calculating any specific statistic*/
proc means data=demo mean median q3 range;
var pop;
run;
/*for univariate analysis of a particular variable*/
proc univariate data=demo;
var pop;
run;

/*to know the frequency of data variables*/
proc freq data=demo;
table region;
run;
/*---------Data creation----------------------------------------------*/
data details;
input Name$ Age Gender$;
datalines;
David 24 M
Katarina 30 F
Miriam 41 F
Natalia 40 F
Jerry 50 M
Dan 80 M
Richard 75 M
Keseniia 23 F
;
run;
/*-----To select required data-----------------------*/
proc print data=demo;
where pop between 1000000 and 2000000;
run;
/*extracting data as per our requirement*/
proc print data=demo;
where adolescentfpyear is missing;
run;
/*To filter the rewuired name*/
proc print data=demo;
where name like 'I%';
run;
/*Conditional statement*/
data demo1;
set sashelp.demographics;
if region='AMR' then region_code=1;
run;

data demo;
set sashelp.demographics;
if region='AMR' & pop>=1000000 then reg_code=1;
run;
/*sorting data*/
proc sort data=demo out=demo_sort;
by descending pop;   /*default is ascending: by pop*/
run;
/*removing the duplicates*/
data one;
infile datalines dlm=',';
input ;
datalines;

/*using proc means and proc freq*/
data demo;
set sashelp.demographics;
run;
proc means data=demo;
run;
proc freq data=demo;
run;

proc means data=SASHELP.demographics min max;
var popAGR;
class region;
by isoname;
run;

proc sort data=demo;
by descending pop;
run;

proc summary data=sashelp.demographics;
var popAGR;
class region;
output out=Means_Summary
mean=Avg_popAGR min=Min_popAGR;
run;
proc print data=means_summary;
run;


/*Dataset1*/
data A;
input EmpID $ Name $;
datalines;
E00634 Strauss
E01483 Lee
E01996 Nick
E04064 Waschk
;
run;

data B;
input EmpID $ Flight $;
datalines;
E04064  5105
E00632  5250
E01996  5501
;
run;

proc sort data=B;
by EmpID;
run;

data C;
merge A (in=a) B (in=b);
by EmpID;
if A and B;
run;
proc print data=C;
run;

/*Dataset2*/
data one;
input X Y $;
datalines;
1 A
2 B
3 C
;
run;

data two;
input X E $;
datalines;
1 A1
1 A2
2 B1
3 C1
4 C2
;
run;

data three;
merge one two;
by X;
run;
proc print data=three;
run;

proc freq data=cars;
table make;
run;

proc freq data=cars;
table make*type/nopercent norow;
run;

data C;
input Num Var $;
datalines;
1 C1
2 C2
2 C3
3 C4
;
run;

data D;
input Num Var $;
datalines;
2 D1
3 D2
3 D3
;
run;

data E;
set C D;
by Num;
run;

proc print data=E;
run;
/*-----------------------------------------------------*/

data emp_add;
infile datalines dlm=' ';
length empname $ 15.;
input empname $ City $ Country $;
datalines;
AbbottRay Jamaica WI
AisbittSandy Melbourne AU
Akinfolarin Trinidad WI
AngerRose Philadelphia US
AnsteyDavid Miami-Dade US
AntoniniDoris Miami-Dade US
AprNishan SanDiego US
ArdskinElizabeth Miami-Dade US
AreuJeryl Miami-Dade US
ArizmendiGilbert SanDiego US
ArmantDebra SanDiego US
;
run;

proc print data=emp_add;
run;

data usa australia other;
set emp_add;
if country='AU' then output Australia;
else if country='US' then output USA;
else output other;
run;

title 'Employee in the United States';

proc print data=usa;
run;

title 'Employee in Australia';

proc print data=australia;
run;
/*----------------------------------------------------*/
 data usa australia other;
 set orion.employee_addresses;
 select (Country);
 when('US') output usa;
 when('AU') output australia;
 otherwise output other;
 end;
 run;
 /*----------------------------------------------------------------*/

data name;
set sashelp.employees;
infile datalines dlm=' '
length Employee_Name $ 20
input Employee_ID $ Full_Name $ Title $ Birth_Date $ Hire_Date;
datalines;
1 Ms.DavolioNancy Sales Representative 

run;




/*--------------------------------------*/
data employee1;
set work.employees;
Title_Of_Courtesy=scan(Full_Name,1);
First_Name=scan(Full_Name,2);
last_Name=scan(Full_Name,3);
run;

data employees1;
set work.employees;
Last_Initial=Substr(Last_Name,1,1);
run;
proc print data=employees;
run;
/*-----------------------------------------*/

data employees;
set Work.employees;
Last_Initial=Substr(LastName,1,1);
run;


/*----tranwrd()---------*/
data demo_NAME4;
set sashelp.demographics;
run;

data demo_NAME4;
set demo;
Name1=tranwrd(region,'AMR','America');
run;

proc print data=demo_NAME4;
run;

/*-------trim() and concatination---------*/
data abc;
input name $;
datalines;
Hyd
Mumbai
Bangalore
India
;
run;

proc print data=abc;
run;

data demo_NAME5; 
run;

proc print data=demo_NAME5;
run;

data demo_NAME5;
set demo;
Address=trim(NAME)||','||trim(REGION);
run;

proc print data=demo_NAME5;
run;  

/*-------------index()-----------*/
data demo_NAME6;
set demo;
if index(UPCASE(name),'IIT')>0;
run;
proc print data=demo_NAME6;
run;

/*-----------Numeric function------------*/

data demo_NAME8;
set demo_NAME4;
int=int(totalFR);
run;
proc print data=demo_NAME8;
run;

data demo_NAME8;
set demo;
round1=round(totalFR,0.25);
round2=round(totalFR,0.5);
run;
proc print data=demo_NAME8;
run;

data ceil;
var=round(10.4);
var1=round(10.4);
var2=round(10.4);
run;
proc print data=ceil;
run;

data demo9;
set sashelp.demographics;
tot_pop=sum(pop);
run;
proc print data=demo9;
run;

/*-------------date function-------------*/
data date;
date=today();
weekday=weekday(date);
run;

proc print data=date;
run;

proc print data=date;
format data date8.;
run;

data conversions;
var1=614;
var2=55000;
var3=366;
cvar1=put(var1,3.);
cvar2=put(var2,dollar7.);
cvar3=put(var3,data9.);
run;
proc print data=conversions;
run;

/*------calculating interest--------*/
data Earnings;
Amount=1000;
Rate=.075/12;
do month=1to 12;
Earned+=(amount+earned)*(rate);
output;
end;
run;
proc print data=Earnings;
run;

data work.earn;
Value=2000;
do year=1 to 20;
interest=value*.075;
value+interest;
output;
end;
proc print data=work.earn;
run;


data mother;
input MID CID1 AGE1 SEX1$ CID2 AGE2 SEX2$ CID3 AGE3 SEX3$;
datalines;
1 1 2 f 2 5 m 3 10 f 
2 1 10 m 2 12 m 3 13 f
3 17 f 2 20 f 3 23 m
 ;
run;


data child(keep=mid cid age sex);
set mother;
length child age sex$ 1;
array c(1:3) cid1-cid3;
array a(1:3) age1-age3;
array s(1:3) sex1-sex3;
do i=1 to 3;
cid=c(i);
age=a(i);
sex=s(i);
if not missing(cid) then output;
end;
run;
proc print data=child;
run;


data dosing;
length med $1. unit $2.;
input patient date med $ doses amt unit $;
datalines;
102 15186 A 2 1.2 mg
102 15193 A 3 1.0 mg
103 15180 B 3 3.5 mg
103 15187 B 3 3.5 mg
104 15223 A 2 1.5 mg
;
run;
proc print data=dosing;
run;

data vital;
input patient date:date9. pulse temp bps bpd;
datalines;
101 25May2001  2 98.5 130 88
101 01Jun2001 5 98.6 133 92
102 30Jul2001  1 99.0 141 93
102 13Aug2001  8 98.7 142 93
103 07Aug2001  8 98.6 140 80
;
run;
proc print data=vital;
format date date9.;
run;

/*inner join*/
proc sql;
CREATE TABLE new AS
Select a.patient,
a.date,
a.med,
b.pulse,
b.temp
From dosing as a, vital as b
Where a.patient=b.patient
And a.date=b.date;
quit;

/*let join*/
Proc sql;
Create table new1 AS
Select a.patient,
a.date,
a.med,
b.pulse,
b.temp
From dosing as a LEFT JOIN vital as b
ON a.patient=b.patient
AND a.date=b.date;
Quit;
/*right join*/
proc sql;
Create table new2 AS
Select a.patient,
a.date,
a.med,
b.pulse,
b.temp
From dosing as a RIGHT JOIN vital as b
ON a.patient=b.patient
AND a.date=b.date;
quit;

/*full join*/
proc sql;
Create table new3 AS
Select a.patient,
a.date,
a.med,
b.pulse,
b.temp
From dosing as a Full join vital as b
ON a.patient=b.patient
AND a.date=b.date;
quit;


data demo;
set sashelp.demographics;
run;
/*'let' method*/
%let region='AMR';
proc print data=demo;
where region=&region;
run;

proc freq data=demo;
table region;
where region=&region;
run;
